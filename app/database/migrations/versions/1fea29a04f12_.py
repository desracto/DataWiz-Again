"""empty message

Revision ID: 1fea29a04f12
Revises: 
Create Date: 2023-10-06 21:54:11.792484

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1fea29a04f12'
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Users',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=True),
    sa.Column('email', sa.String(length=345), nullable=True),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('Quiz',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('userid', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Quiz_QA',
    sa.Column('qaid', sa.String(length=32), nullable=False),
    sa.Column('question', sa.String(length=400), nullable=True),
    sa.Column('answer', sa.String(length=1000), nullable=True),
    sa.Column('quiz_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['Quiz.id'], ),
    sa.PrimaryKeyConstraint('qaid'),
    sa.UniqueConstraint('qaid')
    )
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Quiz_QA')
    op.drop_table('Quiz')
    op.drop_table('Users')
    # ### end Alembic commands ###


def upgrade_prefixed():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Course',
    sa.Column('course_ID', sa.String(length=10), nullable=False),
    sa.Column('course_Name', sa.String(length=100), nullable=True),
    sa.Column('course_Credit', sa.Integer(), nullable=True),
    sa.Column('course_Dept', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('course_ID')
    )
    op.create_table('Employee',
    sa.Column('employee_ID', sa.Integer(), nullable=False),
    sa.Column('employee_FirstName', sa.String(length=50), nullable=True),
    sa.Column('employee_LastName', sa.String(length=50), nullable=True),
    sa.Column('employee_Age', sa.Integer(), nullable=True),
    sa.Column('employee_Dept', sa.String(length=50), nullable=True),
    sa.Column('employee_Salary', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('employee_ID')
    )
    op.create_table('Flight',
    sa.Column('flight_ID', sa.Integer(), nullable=False),
    sa.Column('flight_AirlineName', sa.String(length=100), nullable=True),
    sa.Column('flight_DepartureCity', sa.String(length=100), nullable=True),
    sa.Column('flight_ArrivalCity', sa.String(length=100), nullable=True),
    sa.Column('flight_DepartureTime', sa.DateTime(), nullable=True),
    sa.Column('flight_ArrivalTime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('flight_ID')
    )
    op.create_table('Genre',
    sa.Column('genre_ID', sa.Integer(), nullable=False),
    sa.Column('genre_Name', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('genre_ID')
    )
    op.create_table('Passenger',
    sa.Column('passenger_ID', sa.Integer(), nullable=False),
    sa.Column('passenger_FirstName', sa.String(length=50), nullable=True),
    sa.Column('passenger_LastName', sa.String(length=50), nullable=True),
    sa.Column('passenger_Gender', sa.String(length=5), nullable=True),
    sa.Column('passenger_Age', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('passenger_ID')
    )
    op.create_table('Product',
    sa.Column('products_ID', sa.Integer(), nullable=False),
    sa.Column('products_Name', sa.String(length=50), nullable=True),
    sa.Column('products_Category', sa.String(length=50), nullable=True),
    sa.Column('products_Price', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('products_ID')
    )
    op.create_table('Artist',
    sa.Column('artist_ID', sa.Integer(), nullable=False),
    sa.Column('artist_Name', sa.String(length=100), nullable=True),
    sa.Column('artist_Country', sa.String(length=60), nullable=True),
    sa.Column('artist_GenreID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artist_GenreID'], ['Genre.genre_ID'], ),
    sa.PrimaryKeyConstraint('artist_ID')
    )
    op.create_table('Enrollment',
    sa.Column('enrollment_ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('enrollment_StudentID', sa.Integer(), nullable=True),
    sa.Column('enrollment_CourseID', sa.String(length=10), nullable=True),
    sa.Column('enrollment_Grade', sa.String(length=2), nullable=True),
    sa.ForeignKeyConstraint(['enrollment_CourseID'], ['Course.course_ID'], ),
    sa.PrimaryKeyConstraint('enrollment_ID')
    )
    op.create_table('Inventory',
    sa.Column('inventory_ID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('inventory_Quantity', sa.Integer(), nullable=True),
    sa.Column('products_ProductID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['products_ProductID'], ['Product.products_ID'], ),
    sa.PrimaryKeyConstraint('inventory_ID')
    )
    op.create_table('Ticket',
    sa.Column('ticket_ID', sa.Integer(), nullable=False),
    sa.Column('ticket_FlightID', sa.Integer(), nullable=True),
    sa.Column('ticket_PassengerID', sa.Integer(), nullable=True),
    sa.Column('ticket_SeatNumber', sa.String(length=4), nullable=True),
    sa.Column('ticket_Price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_FlightID'], ['Flight.flight_ID'], ),
    sa.ForeignKeyConstraint(['ticket_PassengerID'], ['Passenger.passenger_ID'], ),
    sa.PrimaryKeyConstraint('ticket_ID')
    )
    op.create_table('Album',
    sa.Column('album_ID', sa.Integer(), nullable=False),
    sa.Column('album_Name', sa.String(length=150), nullable=True),
    sa.Column('album_ReleaseYear', sa.Integer(), nullable=True),
    sa.Column('album_ArtistID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['album_ArtistID'], ['Artist.artist_ID'], ),
    sa.PrimaryKeyConstraint('album_ID')
    )
    op.create_table('Song',
    sa.Column('song_ID', sa.Integer(), nullable=False),
    sa.Column('song_Title', sa.String(length=150), nullable=True),
    sa.Column('song_AlbumID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['song_AlbumID'], ['Album.album_ID'], ),
    sa.PrimaryKeyConstraint('song_ID')
    )
    # ### end Alembic commands ###


def downgrade_prefixed():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Song')
    op.drop_table('Album')
    op.drop_table('Ticket')
    op.drop_table('Inventory')
    op.drop_table('Enrollment')
    op.drop_table('Artist')
    op.drop_table('Product')
    op.drop_table('Passenger')
    op.drop_table('Genre')
    op.drop_table('Flight')
    op.drop_table('Employee')
    op.drop_table('Course')
    # ### end Alembic commands ###

