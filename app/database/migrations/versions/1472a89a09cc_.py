"""empty message

Revision ID: 1472a89a09cc
Revises: 6b218c2d9abe
Create Date: 2023-12-03 21:42:03.469124

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '1472a89a09cc'
down_revision = '6b218c2d9abe'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_prefixed():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Inventory', schema=None) as batch_op:
        batch_op.alter_column('quantity',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('product_id',
               existing_type=mysql.INTEGER(),
               nullable=False)

    with op.batch_alter_table('Product', schema=None) as batch_op:
        batch_op.alter_column('product_name',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('category',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('price',
               existing_type=mysql.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade_prefixed():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Product', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('category',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('product_name',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('Inventory', schema=None) as batch_op:
        batch_op.alter_column('product_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('quantity',
               existing_type=mysql.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###

