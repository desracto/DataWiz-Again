"""empty message

Revision ID: 2f6d4e81ab77
Revises: 2f5a205ae6e5
Create Date: 2023-12-06 09:35:10.516167

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '2f6d4e81ab77'
down_revision = '2f5a205ae6e5'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Quiz_Quiz_Attempts',
    sa.Column('attempt_id', sa.String(length=32), nullable=False),
    sa.Column('question_id', sa.String(length=32), nullable=True),
    sa.Column('answer', sa.String(length=1000), nullable=True),
    sa.Column('score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('feedback', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['Quiz_QPA.qaid'], ),
    sa.PrimaryKeyConstraint('attempt_id'),
    sa.UniqueConstraint('attempt_id')
    )
    with op.batch_alter_table('Quiz_Attempts', schema=None) as batch_op:
        batch_op.drop_index('attempt_id')

    op.drop_table('Quiz_Attempts')
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Quiz_Attempts',
    sa.Column('attempt_id', mysql.VARCHAR(length=32), nullable=False),
    sa.Column('quiz_id', mysql.VARCHAR(length=32), nullable=True),
    sa.Column('ques_id', mysql.VARCHAR(length=32), nullable=True),
    sa.Column('user_id', mysql.VARCHAR(length=32), nullable=True),
    sa.Column('stu_id', mysql.VARCHAR(length=60), nullable=True),
    sa.Column('answer', mysql.VARCHAR(length=1000), nullable=True),
    sa.Column('score', mysql.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('feedback', mysql.VARCHAR(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['ques_id'], ['Quiz_QPA.qaid'], name='Quiz_Attempts_ibfk_1'),
    sa.ForeignKeyConstraint(['quiz_id'], ['Quiz.id'], name='Quiz_Attempts_ibfk_2'),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name='Quiz_Attempts_ibfk_3'),
    sa.PrimaryKeyConstraint('attempt_id')
    )
    with op.batch_alter_table('Quiz_Attempts', schema=None) as batch_op:
        batch_op.create_index('attempt_id', ['attempt_id'], unique=False)

    op.drop_table('Quiz_Quiz_Attempts')
    # ### end Alembic commands ###


def upgrade_prefixed():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_prefixed():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

