"""empty message

Revision ID: 1ad63067d373
Revises: 
Create Date: 2023-12-01 17:48:11.504429

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1ad63067d373'
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Users',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('fullname', sa.String(length=40), nullable=True),
    sa.Column('username', sa.String(length=40), nullable=True),
    sa.Column('email', sa.String(length=345), nullable=True),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('account_type', sa.String(length=10), nullable=True),
    sa.Column('gender', sa.String(length=6), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('filters',
    sa.Column('filter_id', sa.Integer(), nullable=False),
    sa.Column('filter_name', sa.String(length=50), nullable=True),
    sa.Column('filter_desc', sa.String(length=200), nullable=True),
    sa.Column('mark', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('filter_id'),
    sa.UniqueConstraint('filter_id')
    )
    op.create_table('Quiz',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('userid', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('animation',
    sa.Column('ani_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=32), nullable=True),
    sa.Column('query', sa.String(length=400), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('ani_id'),
    sa.UniqueConstraint('ani_id')
    )
    op.create_table('Quiz_QPA',
    sa.Column('qaid', sa.String(length=32), nullable=False),
    sa.Column('quiz_id', sa.String(length=32), nullable=True),
    sa.Column('question_number', sa.Integer(), nullable=True),
    sa.Column('problem', sa.String(length=400), nullable=True),
    sa.Column('answer', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['Quiz.id'], ),
    sa.PrimaryKeyConstraint('qaid'),
    sa.UniqueConstraint('qaid')
    )
    op.create_table('Quiz_Attempts',
    sa.Column('attempt_id', sa.String(length=32), nullable=False),
    sa.Column('quiz_id', sa.String(length=32), nullable=True),
    sa.Column('ques_id', sa.String(length=32), nullable=True),
    sa.Column('user_id', sa.String(length=32), nullable=True),
    sa.Column('stu_id', sa.String(length=60), nullable=True),
    sa.Column('answer', sa.String(length=1000), nullable=True),
    sa.Column('score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('feedback', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['ques_id'], ['Quiz_QPA.qaid'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['Quiz.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('attempt_id'),
    sa.UniqueConstraint('attempt_id')
    )
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Quiz_Attempts')
    op.drop_table('Quiz_QPA')
    op.drop_table('animation')
    op.drop_table('Quiz')
    op.drop_table('filters')
    op.drop_table('Users')
    # ### end Alembic commands ###


def upgrade_prefixed():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Course',
    sa.Column('course_id', sa.String(length=10), nullable=False),
    sa.Column('course_name', sa.String(length=100), nullable=True),
    sa.Column('credits', sa.Integer(), nullable=True),
    sa.Column('dept', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('Employee',
    sa.Column('emp_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('dept', sa.String(length=50), nullable=True),
    sa.Column('salary', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('emp_id')
    )
    op.create_table('Flight',
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('airline_name', sa.String(length=100), nullable=True),
    sa.Column('departure', sa.String(length=100), nullable=True),
    sa.Column('arrival', sa.String(length=100), nullable=True),
    sa.Column('departure_time', sa.DateTime(), nullable=True),
    sa.Column('arrival_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('flight_id')
    )
    op.create_table('Genre',
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.Column('genre_name', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('genre_id')
    )
    op.create_table('Passenger',
    sa.Column('passenger_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('gender', sa.String(length=5), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('passenger_id')
    )
    op.create_table('Product',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('product_name', sa.String(length=50), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('Artist',
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('artist_name', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=60), nullable=True),
    sa.Column('genre_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['genre_id'], ['Genre.genre_id'], ),
    sa.PrimaryKeyConstraint('artist_id')
    )
    op.create_table('Enrollment',
    sa.Column('enroll_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.String(length=10), nullable=True),
    sa.Column('grade', sa.String(length=2), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['Course.course_id'], ),
    sa.PrimaryKeyConstraint('enroll_id')
    )
    op.create_table('Inventory',
    sa.Column('inventory_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['Product.product_id'], ),
    sa.PrimaryKeyConstraint('inventory_id')
    )
    op.create_table('Ticket',
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('flight_id', sa.Integer(), nullable=True),
    sa.Column('passenger_id', sa.Integer(), nullable=True),
    sa.Column('seat_number', sa.String(length=4), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['flight_id'], ['Flight.flight_id'], ),
    sa.ForeignKeyConstraint(['passenger_id'], ['Passenger.passenger_id'], ),
    sa.PrimaryKeyConstraint('ticket_id')
    )
    op.create_table('Album',
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.Column('album_name', sa.String(length=150), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('artist_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['Artist.artist_id'], ),
    sa.PrimaryKeyConstraint('album_id')
    )
    op.create_table('Song',
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('song_title', sa.String(length=150), nullable=True),
    sa.Column('album_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['album_id'], ['Album.album_id'], ),
    sa.PrimaryKeyConstraint('song_id')
    )
    # ### end Alembic commands ###


def downgrade_prefixed():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Song')
    op.drop_table('Album')
    op.drop_table('Ticket')
    op.drop_table('Inventory')
    op.drop_table('Enrollment')
    op.drop_table('Artist')
    op.drop_table('Product')
    op.drop_table('Passenger')
    op.drop_table('Genre')
    op.drop_table('Flight')
    op.drop_table('Employee')
    op.drop_table('Course')
    # ### end Alembic commands ###

